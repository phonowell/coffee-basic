; generated by coffee-basic/0.0.2

if (A_IsAdmin != true) {
  Run *RunAs "%A_ScriptFullPath%"
  ExitApp
}

#KeyHistory 0
#MaxThreads 20
#NoEnv
#Persistent
#SingleInstance Force
#UseHook

CoordMode Mouse, Client
CoordMode Pixel, Client
CoordMode ToolTip, Client
SendMode Event
SetBatchLines 100ms
SetKeyDelay 0, 50
SetMouseDelay 0, 50

; global variable

global $cd := {}
global $ts := {}
global $mp := 0
global $isChanting := false
global $isMoving := false
global hasTarget := false
global $level := 80
global $skill := {}
global $watcher := {}
global red := 0
global white := 0
global isReporting := false
global tsReport := 0
global $level := 80
global ts := {}
global cd := {}

; function

calcCD(name) {
  result := $cd[name] - (A_TickCount - $ts[name])
  if !(result > 0) {
    return 0
  }
  result := Round(result / 1000)
  return result
}

clearTip() {
  ToolTip
}

clearWatcher(name, type := "used") {
  if (type == "used") {
    if !(isUsed(name)) {
      return
    }
  }
  else if (type == "status") {
    if !(hasStatus(name)) {
      return
    }
  }
  if !($watcher[name]) {
    MsgBox % "invalid watcher: " . name . ""
    return
  }
  __timer__ := $watcher[name]
  SetTimer %__timer__%, Off
  $ts[name] := A_TickCount - $cd.技能施放补正
}

getGroup() {
  GetKeyState __value__, 2joy7
  isLT := __value__ == "D"
  GetKeyState __value__, 2joy8
  isRT := __value__ == "D"
  if (isLT and isRT) {
    return "both"
  }
  if (isLT) {
    return "left"
  }
  if (isRT) {
    return "right"
  }
  return
}

getMp() {
  PixelSearch x, y, 181, 36, 328, 36, 0x58483E, 10, Fast RGB
  if !(x) {
    return 100
  }
  percent := (x - 181) * 100 / (328 - 181)
  percent := Floor(percent)
  return percent
}

hasStatus(name) {
  ImageSearch x, y, 725, 840, 925, 875, % A_ScriptDir . "\" . "image\" . name . ".png"
  if (x > 0 and y > 0) {
    return true
  }
  return false
}

hasStatusTarget(name) {
  ImageSearch x, y, 725, 765, 925, 800, % A_ScriptDir . "\" . "image\" . name . ".png"
  if (x > 0 and y > 0) {
    return true
  }
  return false
}

isUsed(name) {
  ImageSearch x, y, 60, 915, 225, 975, % A_ScriptDir . "\" . "image\" . name . ".png"
  if (x > 0 and y > 0) {
    return true
  }
  return false
}

isChanting() {
  if ($isMoving) {
    return false
  }
  PixelGetColor color, 1130, 865, RGB
  return color == 0x2B1B13
}

isMoving() {
  GetKeyState dis, 2joyx
  if (dis < 40) {
    return true
  }
  if (dis > 60) {
    return true
  }
  GetKeyState dis, 2joyy
  if (dis < 40) {
    return true
  }
  if (dis > 60) {
    return true
  }
  return false
}

isTargeting() {
  PixelGetColor color, 650, 65, RGB
  if (color == 0xFF8888) {
    return true
  }
  if (color == 0xFFC888) {
    return true
  }
  if (color == 0xEBD788) {
    return true
  }
  if (color == 0xFFB1FF) {
    return true
  }
  return false
}

makeReportMsg(msg, name) {
  result := calcCD(name)
  if !(result > 1) {
    return msg
  }
  return "" . msg . "`n" . name . "：" . result . "s"
}

resetKey() {
  Send {alt up}
  Send {ctrl up}
  Send {shift up}
}

resetTs() {
  for key, value in ts {
    $ts[key] := 0
  }
}

setLevel() {
  InputBox $level, , % "input level", , , , , , , , % $level
  if !($level > 0) {
    $level := 80
  }
  if ($level < 10) {
    $level := $level * 10
  }
}

use(name, option := false) {
  if !($skill[name]) {
    MsgBox % "invalid skill: " . name . ""
    return
  }
  return $skill[name].Call(option)
}

watch(name) {
  if !($watcher[name]) {
    MsgBox % "invalid watcher: " . name . ""
    return
  }
  return $watcher[name]()
}

攻击() {
  group := getGroup()
  if !(group) {
    return
  }
  use("报告")
  if !(use("索敌")) {
    return
  }
  if (group == "right") {
    attackS()
    return
  }
  if (group == "both") {
    attackM()
    return
  }
}

bindAttack() {
  GetKeyState __value__, 2joy4
  isPressing := __value__ == "D"
  if !(isPressing) {
    SetTimer bindAttack, Off
    SetTimer __$skill_dot_清空信息__, % 0 - 10000
    return
  }
  SetTimer __$skill_dot_清空信息__, Off
  攻击()
}

_治疗() {
  group := getGroup()
  if !(group) {
    return
  }
  use("报告")
  if (group == "right") {
    单体治疗()
    return
  }
  if (group == "both") {
    群体治疗()
    return
  }
}

绑定治疗() {
  GetKeyState __value__, 2joy2
  isPressing := __value__ == "D"
  if !(isPressing) {
    SetTimer 绑定治疗, Off
    SetTimer __$skill_dot_清空信息__, % 0 - 10000
    return
  }
  SetTimer __$skill_dot_清空信息__, Off
  _治疗()
}

getRed() {
  PixelGetColor color, 1075, 818, RGB
  if !(color == 0xDEB673) {
    return 3
  }
  PixelGetColor color, 1057, 818, RGB
  if !(color == 0xDEB673) {
    return 2
  }
  PixelGetColor color, 1039, 818, RGB
  if !(color == 0xDEB673) {
    return 1
  }
  return 0
}

getWhite() {
  PixelGetColor color, 1078, 790, RGB
  if !(color == 0xD6B273) {
    return 3
  }
  PixelGetColor color, 1058, 790, RGB
  if !(color == 0xD6B273) {
    return 2
  }
  PixelGetColor color, 1038, 790, RGB
  if !(color == 0xD6B273) {
    return 1
  }
  return 0
}

report() {
  red := getRed()
  white := getWhite()
  if !(isReporting) {
    return
  }
  msg := "等级：" . $level . " / 魔力：" . mp . "%"
  msg := "" . msg . "`n白：" . white . " / 红：" . red . ""
  msg := "" . msg . "`n耗时：" . A_TickCount - tsReport . "ms`n"
  tsReport := A_TickCount
  msg := makeReportMsg(msg, "神速咏唱")
  msg := makeReportMsg(msg, "法令")
  msg := makeReportMsg(msg, "无中生有")
  msg := makeReportMsg(msg, "神名")
  msg := makeReportMsg(msg, "全大赦")
  msg := makeReportMsg(msg, "即刻咏唱")
  msg := makeReportMsg(msg, "醒梦")
  ToolTip % msg, 410, 640
  SetTimer clearTip, Off
  SetTimer clearTip, % 0 - 5000
}

飞石() {
  Send {alt down}{1}{alt up}
}

治疗() {
  Send {alt down}{2}{alt up}
}

疾风() {
  if !($isMoving) {
    if ($level >= 72) {
      if (hasStatusTarget("天辉")) {
        return
      }
    }
    else if ($level >= 46) {
      if (hasStatusTarget("烈风")) {
        return
      }
    }
    else {
      if (hasStatusTarget("疾风")) {
        return
      }
    }
  }
  Send {alt down}{3}{alt up}
  return true
}

医治() {
  Send {alt down}{4}{alt up}
}

复活() {
  Send {alt down}{5}{alt up}
}

水流环() {
  Send {alt down}{6}{alt up}
}

救疗() {
  Send {alt down}{7}{alt up}
}

医济() {
  if !($level >= 50) {
    return
  }
  if (hasStatus("医济")) {
    return
  }
  Send {alt down}{8}{alt up}
  return true
}

神速咏唱() {
  if !($level >= 30) {
    return
  }
  if !(A_TickCount - $ts.神速咏唱 > $cd.神速咏唱) {
    return
  }
  Send {alt down}{9}{alt up}
  $ts.神速咏唱 := A_TickCount - $cd.神速咏唱 + $cd.技能施放补正
  SetTimer __$watcher_dot_神速咏唱__, % $cd.技能施放判断间隔
  return true
}

__$watcher_dot_神速咏唱__() {
  if !(hasStatus("神速咏唱")) {
    return
  }
  SetTimer __$watcher_dot_神速咏唱__, Off
  $ts.神速咏唱 := A_TickCount - $cd.技能施放补正
}

再生() {
  if !($level >= 35) {
    return
  }
  if (hasStatusTarget("再生")) {
    return
  }
  if !(能力技冷却判断()) {
    return
  }
  Send {alt down}{0}{alt up}
  return true
}

愈疗() {
  if !($level >= 40) {
    return
  }
  Send {alt down}{-}{alt up}
  return true
}

神圣() {
  if !($level >= 45) {
    return
  }
  Send {alt down}{=}{alt up}
  return true
}

天赐祝福() {
  if !($level >= 50) {
    return
  }
  Send {ctrl down}{1}{ctrl up}
  return true
}

安慰之心() {
  if !($level >= 52) {
    return
  }
  if !(white >= 1) {
    return
  }
  if !(能力技冷却判断()) {
    return
  }
  Send {ctrl down}{2}{ctrl up}
  return true
}

庇护所() {
  if !($level >= 52) {
    return
  }
  Send {ctrl down}{3}{ctrl up}
  return true
}

法令() {
  if !($level >= 56) {
    return
  }
  if !(A_TickCount - $ts.法令 > $cd.法令) {
    return
  }
  Send {ctrl down}{4}{ctrl up}
  $ts.法令 := A_TickCount - $cd.法令 + $cd.技能施放补正
  SetTimer __$watcher_dot_法令__, % $cd.技能施放判断间隔
  return true
}

__$watcher_dot_法令__() {
  if !(isUsed("法令")) {
    return
  }
  SetTimer __$watcher_dot_法令__, Off
  $ts.法令 := A_TickCount - $cd.技能施放补正
}

无中生有() {
  if !($level >= 58) {
    return
  }
  if !(A_TickCount - $ts.无中生有 > $cd.无中生有) {
    return
  }
  Send {ctrl down}{5}{ctrl up}
  $ts.无中生有 := A_TickCount - $cd.无中生有 + $cd.技能施放补正
  SetTimer __$watcher_dot_无中生有__, % $cd.技能施放判断间隔
  return true
}

__$watcher_dot_无中生有__() {
  if !(hasStatus("无中生有")) {
    return
  }
  SetTimer __$watcher_dot_无中生有__, Off
  $ts.无中生有 := A_TickCount - $cd.技能施放补正
}

神名() {
  if !($level >= 60) {
    return
  }
  if !(A_TickCount - $ts.神名 > $cd.神名) {
    return
  }
  if !(能力技冷却判断()) {
    return
  }
  Send {ctrl down}{6}{ctrl up}
  $ts.神名 := A_TickCount - $cd.神名 + $cd.技能施放补正
  SetTimer __$watcher_dot_神名__, % $cd.技能施放判断间隔
  return true
}

__$watcher_dot_神名__() {
  if !(isUsed("神名")) {
    return
  }
  SetTimer __$watcher_dot_神名__, Off
  $ts.神名 := A_TickCount - $cd.技能施放补正
}

神祝祷() {
  if !($level >= 66) {
    return
  }
  Send {ctrl down}{7}{ctrl up}
  return true
}

全大赦() {
  if !($level >= 70) {
    return
  }
  if !(A_TickCount - $ts.全大赦 > $cd.全大赦) {
    return
  }
  if !(能力技冷却判断()) {
    return
  }
  Send {ctrl down}{8}{ctrl up}
  $ts.全大赦 := A_TickCount - $cd.全大赦 + $cd.技能施放补正
  SetTimer __$watcher_dot_全大赦__, % $cd.技能施放判断间隔
  return true
}

__$watcher_dot_全大赦__() {
  if !(isUsed("全大赦")) {
    return
  }
  SetTimer __$watcher_dot_全大赦__, Off
  $ts.全大赦 := A_TickCount - $cd.技能施放补正
}

苦难之心() {
  if !($level >= 74) {
    return
  }
  if !(red >= 3) {
    return
  }
  Send {ctrl down}{9}{ctrl up}
  return true
}

狂喜之心() {
  if !($level >= 76) {
    return
  }
  if !(white >= 1) {
    return
  }
  if !(能力技冷却判断()) {
    return
  }
  Send {ctrl down}{0}{ctrl up}
  return true
}

节制() {
  if !($level >= 80) {
    return
  }
  Send {ctrl down}{-}{ctrl up}
  return true
}

沉静() {
  Send {shift down}{1}{shift up}
}

康复() {
  Send {shift down}{2}{shift up}
}

即刻咏唱() {
  if !($level >= 18) {
    return
  }
  if !(A_TickCount - $ts.即刻咏唱 > $cd.即刻咏唱) {
    return
  }
  Send {shift down}{3}{shift up}
  $ts.即刻咏唱 := A_TickCount - $cd.即刻咏唱 + $cd.技能施放补正
  SetTimer __$watcher_dot_即刻咏唱__, % $cd.技能施放判断间隔
  return true
}

__$watcher_dot_即刻咏唱__() {
  if !(hasStatus("即刻咏唱")) {
    return
  }
  SetTimer __$watcher_dot_即刻咏唱__, Off
  $ts.即刻咏唱 := A_TickCount - $cd.技能施放补正
}

醒梦() {
  if !($level >= 24) {
    return
  }
  if !(A_TickCount - $ts.醒梦 > $cd.醒梦) {
    return
  }
  $mp := getMp()
  if ($mp > 50) {
    return
  }
  Send {shift down}{4}{shift up}
  $ts.醒梦 := A_TickCount - $cd.醒梦 + $cd.技能施放补正
  SetTimer __$watcher_dot_醒梦__, % $cd.技能施放判断间隔
  return true
}

__$watcher_dot_醒梦__() {
  if !(hasStatus("醒梦")) {
    return
  }
  SetTimer __$watcher_dot_醒梦__, Off
  $ts.醒梦 := A_TickCount - $cd.技能施放补正
}

沉稳咏唱() {
  if !($level >= 44) {
    return
  }
  Send {shift down}{5}{shift up}
  return true
}

营救() {
  if !($level >= 48) {
    return
  }
  Send {shift down}{6}{shift up}
  return true
}

冲刺() {
  Send {shift down}{-}{shift up}
}

清空信息() {
  Send {shift down}{=}{shift up}
}

__$skill_dot_索敌__() {
  hasTarget := isTargeting()
  if (hasTarget) {
    return true
  }
  Send {f11}
  hasTarget := isTargeting()
  return hasTarget
}

__$skill_dot_中断咏唱__() {
  if !($isChanting) {
    return
  }
  Send {space}
}

能力技冷却判断() {
  if !(A_TickCount - $ts.能力技 > $cd.能力技) {
    return
  }
  $ts.能力技 := A_TickCount
  return true
}

attackS() {
  if ($isChanting) {
    return
  }
  醒梦()
  法令()
  苦难之心()
  神速咏唱()
  if ($isMoving) {
    疾风()
    return
  }
  疾风()
  飞石()
}

attackM() {
  if ($isChanting) {
    return
  }
  醒梦()
  法令()
  苦难之心()
  神速咏唱()
  无中生有()
  即刻咏唱()
  if ($isMoving) {
    疾风()
    return
  }
  神圣()
}

单体治疗() {
  if ($isChanting) {
    return
  }
  醒梦()
  法令()
  神名()
  安慰之心()
  再生()
  救疗()
  治疗()
}

群体治疗() {
  if ($isChanting) {
    return
  }
  醒梦()
  法令()
  全大赦()
  狂喜之心()
  医济()
  医治()
}

__$default__() {
  $cd.技能施放判断间隔 := 100
  $cd.技能施放补正 := 1500
  $ts.神速咏唱 := 0
  $cd.神速咏唱 := 150000
  $watcher.神速咏唱 := Func("__$watcher_dot_神速咏唱__")
  $ts.法令 := 0
  $cd.法令 := 45000
  $watcher.法令 := Func("__$watcher_dot_法令__")
  $ts.无中生有 := 0
  $cd.无中生有 := 120000
  $watcher.无中生有 := Func("__$watcher_dot_无中生有__")
  $ts.神名 := 0
  $cd.神名 := 60000
  $watcher.神名 := Func("__$watcher_dot_神名__")
  $ts.全大赦 := 0
  $cd.全大赦 := 60000
  $watcher.全大赦 := Func("__$watcher_dot_全大赦__")
  $ts.即刻咏唱 := 0
  $cd.即刻咏唱 := 60000
  $watcher.即刻咏唱 := Func("__$watcher_dot_即刻咏唱__")
  $ts.醒梦 := 0
  $cd.醒梦 := 60000
  $watcher.醒梦 := Func("__$watcher_dot_醒梦__")
  $skill.索敌 := Func("__$skill_dot_索敌__")
  $skill.中断咏唱 := Func("__$skill_dot_中断咏唱__")
  $ts.能力技 := 0
  $cd.能力技 := 300
}

; default
__$default__()

; event

f5::
  resetKey()
  resetTs()
  SoundBeep
  setLevel()
return

^f5::
  resetKey()
  SoundBeep
  Reload
return

!f4::
  resetKey()
  SoundBeep
  ExitApp
return

2joy4::
  if !(getGroup()) {
    return
  }
  SetTimer bindAttack, Off
  SetTimer bindAttack, % 300
  攻击()
return

2joy2::
  if !(getGroup()) {
    return
  }
  SetTimer 绑定治疗, Off
  SetTimer 绑定治疗, % 300
  _治疗()
return

2joy1::
  group := getGroup()
  if !(group) {
    return
  }
  if (group == "right") {
    神祝祷()
    return
  }
  if (group == "both") {
    康复()
    return
  }
  if (group == "left") {
    即刻咏唱()
    无中生有()
    复活()
    return
  }
return

2joy3::
  group := getGroup()
  if !(group) {
    return
  }
  if (group == "right") {
    庇护所()
    return
  }
  if (group == "both") {
    无中生有()
    愈疗()
    return
  }
return

2joy5::
  if !(getGroup() == "both") {
    return
  }
  Send {shift down}{tab}{shift up}
return

2joy6::
  if !(getGroup() == "both") {
    return
  }
  Send {tab}
return

2joy12::
  if !(getGroup()) {
    return
  }
  冲刺()
return

; eof
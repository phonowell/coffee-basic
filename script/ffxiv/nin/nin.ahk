; generated by coffee-basic/0.0.3

if (A_IsAdmin != true) {
  Run *RunAs "%A_ScriptFullPath%"
  ExitApp
}

#KeyHistory 0
#MaxThreads 20
#NoEnv
#Persistent
#SingleInstance Force
#UseHook

CoordMode Mouse, Client
CoordMode Pixel, Client
CoordMode ToolTip, Client
SendMode Event
SetBatchLines 100ms
SetKeyDelay 0, 50
SetMouseDelay 0, 50

; global variable

global $cd := {}
global $ts := {}
global $isChanting := false
global $hp := 0
global $isMoving := false
global $mp := 0
global $isNear := false
global $isTargeting := false
global $trigger := false
global $step := 0
global $level := 80
global $skill := {}
global $watcher := {}
global $isReporting := true
global $ap := 0

; function

attack() {
  use("获取状态")
  use("报告")
  if ($trigger == "right") {
    attackS()
    return
  }
  if ($trigger == "both") {
    attackM()
    return
  }
  if ($trigger == "left") {
    attackF()
    return
  }
}

bindAttack() {
  GetKeyState __value__, 2joy4
  isPressing := __value__ == "D"
  if !(isPressing) {
    SetTimer bindAttack, Off
    return
  }
  attack()
}

calcCd(name) {
  result := $cd[name] - (A_TickCount - $ts[name])
  if !(result > 0) {
    return 0
  }
  result := Round(result / 1000)
  return result
}

checkChanting() {
  if ($isMoving) {
    $isChanting := false
    return $isChanting
  }
  PixelGetColor color, 1130, 865, RGB
  $isChanting := color == 0x2B1B13
  return isChanting
}

checkHp() {
  PixelSearch x, y, 21, 36, 168, 36, 0x58483E, 10, Fast RGB
  if !(x) {
    $hp := 100
    return $hp
  }
  percent := (x - 21) * 100 / (168 - 21)
  percent := Round(percent)
  $hp := percent
  return $hp
}

checkMoving() {
  GetKeyState dis, 2joyx
  if (dis < 40 or dis > 60) {
    $isMoving := true
    return $isMoving
  }
  GetKeyState dis, 2joyy
  if (dis < 40 or dis > 60) {
    $isMoving := true
    return $isMoving
  }
  $isMoving := false
  return $isMoving
}

checkMp() {
  PixelSearch x, y, 181, 36, 328, 36, 0x58483E, 10, Fast RGB
  if !(x) {
    $mp := 100
    return $mp
  }
  percent := (x - 181) * 100 / (328 - 181)
  percent := Round(percent)
  $mp := percent
  return $mp
}

checkNear() {
  if !($isTargeting) {
    $isNear := false
    return $isNear
  }
  PixelGetColor color, 1803, 764, RGB
  if (color == 0xD23A3A) {
    $isNear := false
    return $isNear
  }
  $isNear := true
  return $isNear
}

checkTargeting() {
  PixelGetColor color, 650, 65, RGB
  if (color == 0xFF8888) {
    return setTargeting()
  }
  if (color == 0xFFC888) {
    return setTargeting()
  }
  if (color == 0xEBD788) {
    return setTargeting()
  }
  if (color == 0xFFB1FF) {
    return setTargeting()
  }
  $isTargeting := false
  return $isTargeting
}

setTargeting() {
  $isTargeting := true
  $ts.targeting := A_TickCount
  return $isTargeting
}

checkTrigger() {
  GetKeyState __value__, 2joy7
  isLT := __value__ == "D"
  GetKeyState __value__, 2joy8
  isRT := __value__ == "D"
  if (isLT and isRT) {
    $trigger := "both"
    return $trigger
  }
  if (isLT) {
    $trigger := "left"
    return $trigger
  }
  if (isRT) {
    $trigger := "right"
    return $trigger
  }
  $trigger := false
  return $trigger
}

clearTip() {
  ToolTip
}

clearWatcher(name, type := "hasUsed") {
  if (type == "hasUsed") {
    if !(hasUsed(name)) {
      return
    }
  }
  else if (type == "status") {
    if !(hasStatus(name)) {
      return
    }
  }
  if !($watcher[name]) {
    MsgBox % "invalid watcher: " . name . ""
    return
  }
  __timer__ := $watcher[name]
  SetTimer %__timer__%, Off
  $ts[name] := A_TickCount - $cd.技能施放补正
  return true
}

hasStatus(name) {
  ImageSearch x, y, 725, 840, 925, 875, % A_ScriptDir . "\" . "image\" . name . ".png"
  return x > 0 and y > 0
}

hasStatusByTarget(name) {
  ImageSearch x, y, 725, 765, 925, 800, % A_ScriptDir . "\" . "image\" . name . ".png"
  return x > 0 and y > 0
}

hasUsed(name) {
  ImageSearch x, y, 60, 915, 225, 975, % A_ScriptDir . "\" . "image\" . name . ".png"
  return x > 0 and y > 0
}

makeReportMsg(msg := false, list := false) {
  if !(msg) {
    msg := "Lv." . $level . " / " . $trigger . " / " . A_TickCount - $ts.报告 . " ms"
    msg := "" . msg . "`nhp: " . $hp . " / mp: " . $mp . ""
    msg := "" . msg . "`ntargeting: " . $isTargeting . " / near: " . $isNear . ""
    msg := "" . msg . "`nmoving: " . $isMoving . " / chanting: " . $isChanting . ""
    return msg
  }
  for __i__, name in list {
    result := calcCd(name)
    if !(result > 1) {
      continue
    }
    msg := "" . msg . "`n" . name . ": " . result . " s"
  }
  return msg
}

resetKey() {
  Send {alt up}
  Send {ctrl up}
  Send {shift up}
  MouseMove 410, 640, 0
}

resetStep() {
  $step := 0
}

resetTs() {
  for key, value in $ts {
    $ts[key] := 0
  }
}

setLevel() {
  InputBox $level, , % "input level", , , , , , , , % $level
  if !($level > 0) {
    $level := 80
  }
  if ($level < 10) {
    $level := $level * 10
  }
  resetTs()
}

use(name, option := false) {
  if !($skill[name]) {
    MsgBox % "invalid skill: " . name . ""
    return
  }
  return $skill[name].Call(option)
}

watch(name) {
  if !($watcher[name]) {
    MsgBox % "invalid watcher: " . name . ""
    return
  }
  return $watcher[name]()
}

__$skill_dot_中断咏唱__() {
  if !($isChanting) {
    return true
  }
  Send {space}
  return true
}

__$skill_dot_冲刺__() {
  Send {ctrl down}{alt down}{-}{alt up}{ctrl up}
  return true
}

__$skill_dot_空白信息__() {
  Send {ctrl down}{alt down}{=}{alt up}{ctrl up}
  return true
}

__$skill_dot_索敌__() {
  if ($isTargeting) {
    return true
  }
  Send {f11}
  return true
}

__$skill_dot_八卦无刃杀__() {
  if !($level >= 52) {
    return
  }
  if !($step == 21) {
    return
  }
  if !(A_TickCount - $ts.八卦无刃杀 > $cd.八卦无刃杀) {
    return
  }
  Send {ctrl down}{5}{ctrl up}
  SetTimer __$watcher_dot_八卦无刃杀__, % $cd.技能施放判断间隔
  return true
}

__$watcher_dot_八卦无刃杀__() {
  if !(clearWatcher("八卦无刃杀")) {
    return
  }
  $step := 0
  SetTimer resetStep, Off
}

__$skill_dot_内丹__() {
  if !(A_TickCount - $ts.内丹 > $cd.内丹) {
    return
  }
  Send {shift down}{2}{shift up}
  SetTimer __$watcher_dot_内丹__, % $cd.技能施放判断间隔
  return true
}

__$watcher_dot_内丹__() {
  clearWatcher("内丹")
}

__$skill_dot_双刃旋__() {
  if !($step == 0 or $step > 20) {
    return
  }
  if !(A_TickCount - $ts.双刃旋 > $cd.双刃旋) {
    return
  }
  Send {alt down}{1}{alt up}
  SetTimer __$watcher_dot_双刃旋__, % $cd.技能施放判断间隔
  return true
}

__$watcher_dot_双刃旋__() {
  if !(clearWatcher("双刃旋")) {
    return
  }
  $step := 1
  SetTimer resetStep, Off
  SetTimer resetStep, % 0 - 15000
}

__$skill_dot_天之印__() {
  if !($level >= 30) {
    return
  }
  Send {alt down}{-}{alt up}
  return true
}

__$skill_dot_夺取__() {
  if !($level >= 15) {
    return
  }
  if !(A_TickCount - $ts.夺取 > $cd.夺取) {
    return
  }
  Send {alt down}{6}{alt up}
  SetTimer __$watcher_dot_夺取__, % $cd.技能施放判断间隔
  return true
}

__$watcher_dot_夺取__() {
  clearWatcher("夺取")
}

__$skill_dot_影牙__() {
  if !($level >= 30) {
    return
  }
  if !($step == 0) {
    return
  }
  if !(A_TickCount - $ts.影牙 > $cd.影牙) {
    return
  }
  Send {alt down}{9}{alt up}
  SetTimer __$watcher_dot_影牙__, % $cd.技能施放判断间隔
  return true
}

__$watcher_dot_影牙__() {
  clearWatcher("影牙")
}

__$skill_dot_忍术__() {
  if !($level >= 30) {
    return
  }
  Send {alt down}{=}{alt up}
  return true
}

__$skill_dot_扫腿__() {
  if !(A_TickCount - $ts.扫腿 > $cd.扫腿) {
    return
  }
  if (hasStatusByTarget("眩晕")) {
    return
  }
  Send {shift down}{3}{shift up}
  SetTimer __$watcher_dot_扫腿__, % $cd.技能施放判断间隔
  return true
}

__$watcher_dot_扫腿__() {
  clearWatcher("扫腿")
}

__$skill_dot_报告__() {
  if !($isReporting) {
    return
  }
  msg := makeReportMsg()
  msg := "" . msg . "`n"
  $ts.报告 := A_TickCount
  msg := makeReportMsg(msg, ["残影", "夺取", "影牙", "内丹", "扫腿", "浴血", "牵制"])
  ToolTip % msg, 410, 640
  SetTimer clearTip, Off
  SetTimer clearTip, % 0 - 10000
}

__$skill_dot_旋风刃__() {
  if !($level >= 26) {
    return
  }
  if !($step == 2) {
    return
  }
  if !(A_TickCount - $ts.旋风刃 > $cd.旋风刃) {
    return
  }
  Send {alt down}{8}{alt up}
  SetTimer __$watcher_dot_旋风刃__, % $cd.技能施放判断间隔
  return true
}

__$watcher_dot_旋风刃__() {
  if !(clearWatcher("旋风刃")) {
    return
  }
  $step := 0
  SetTimer resetStep, Off
}

__$skill_dot_残影__() {
  if !(A_TickCount - $ts.残影 > $cd.残影) {
    return
  }
  Send {alt down}{2}{alt up}
  SetTimer __$watcher_dot_残影__, % $cd.技能施放判断间隔
  return true
}

__$watcher_dot_残影__() {
  clearWatcher("残影", "status")
}

__$skill_dot_浴血__() {
  if !(A_TickCount - $ts.浴血 > $cd.浴血) {
    return
  }
  Send {shift down}{4}{shift up}
  SetTimer __$watcher_dot_浴血__, % $cd.技能施放判断间隔
  return true
}

__$watcher_dot_浴血__() {
  clearWatcher("浴血", "status")
}

__$skill_dot_牵制__() {
  if !(A_TickCount - $ts.牵制 > $cd.牵制) {
    return
  }
  Send {shift down}{5}{shift up}
  SetTimer __$watcher_dot_牵制__, % $cd.技能施放判断间隔
  return true
}

__$watcher_dot_牵制__() {
  clearWatcher("牵制")
}

__$skill_dot_绝风__() {
  if !($step == 1) {
    return
  }
  if !(A_TickCount - $ts.绝风 > $cd.绝风) {
    return
  }
  Send {alt down}{3}{alt up}
  SetTimer __$watcher_dot_绝风__, % $cd.技能施放判断间隔
  return true
}

__$watcher_dot_绝风__() {
  if !(clearWatcher("绝风")) {
    return
  }
  if !($level >= 26) {
    $step := 0
    SetTimer resetStep, Off
    return
  }
  $step := 2
  SetTimer resetStep, Off
  SetTimer resetStep, % 0 - 15000
}

__$skill_dot_能力技__() {
  if !($ap == 0) {
    return
  }
  if !(A_TickCount - $ts.能力技 > $cd.能力技) {
    return
  }
  $ts.能力技 := A_TickCount
  $ap := -2
  SetTimer 施放能力技, % 500
}

施放能力技() {
  if ($ap < 0) {
    $ap := -$ap
    return
  }
  if ($ap == 0) {
    SetTimer 施放能力技, Off
    return
  }
  $ap--
  能力技施放()
}

能力技施放() {
  if !($isNear) {
    use("空白信息")
    return
  }
  for __i__, skill in ["夺取", "空白信息"] {
    if (use(skill)) {
      return
    }
  }
}

__$skill_dot_获取状态__() {
  if (A_TickCount - $ts.获取状态 > 10000) {
    use("空白信息")
    use("空白信息")
    use("空白信息")
  }
  $ts.获取状态 := A_TickCount
  checkTrigger()
  checkTargeting()
  checkNear()
  checkMoving()
}

__$skill_dot_血雨飞花__() {
  if !($level >= 38) {
    return
  }
  if !($step < 20) {
    return
  }
  if !(A_TickCount - $ts.血雨飞花 > $cd.血雨飞花) {
    return
  }
  Send {alt down}{0}{alt up}
  SetTimer __$watcher_dot_血雨飞花__, % $cd.技能施放判断间隔
  return true
}

__$watcher_dot_血雨飞花__() {
  if !(clearWatcher("血雨飞花")) {
    return
  }
  if !($level >= 52) {
    $step := 0
    SetTimer resetStep, Off
    return
  }
  $step := 21
  SetTimer resetStep, Off
  SetTimer resetStep, % 15000
}

__$skill_dot_飞刀__() {
  if !($level >= 15) {
    return
  }
  Send {alt down}{5}{alt up}
  $step := 0
  return true
}

attackS() {
  if !($isTargeting) {
    use("索敌")
    return
  }
  if !($isNear) {
    return
  }
  for __i__, skill in ["影牙", "双刃旋", "绝风", "旋风刃"] {
    if (use(skill)) {
      use("能力技")
      break
    }
  }
}

attackM() {
  if !($isTargeting) {
    use("索敌")
    return
  }
  for __i__, skill in ["血雨飞花", "八卦无刃杀"] {
    if (use(skill)) {
      use("能力技")
      break
    }
  }
}

attackF() {
  if !($isTargeting) {
    use("索敌")
    return
  }
  use("飞刀")
}

defendS() {
  for __i__, skill in ["残影", "内丹", "浴血"] {
    if (use(skill)) {
      return
    }
  }
  SoundBeep
}

breakS() {
  if !($isTargeting) {
    return
  }
  if (use("扫腿")) {
    return
  }
  SoundBeep
}

breakH() {
  if !($isTargeting) {
    return
  }
  if (use("牵制")) {
    return
  }
  SoundBeep
}

__$default__() {
  $ts.targeting := 0
  $cd.技能施放判断间隔 := 100
  $cd.技能施放补正 := 1500
  $skill.中断咏唱 := Func("__$skill_dot_中断咏唱__")
  $skill.冲刺 := Func("__$skill_dot_冲刺__")
  $skill.空白信息 := Func("__$skill_dot_空白信息__")
  $skill.索敌 := Func("__$skill_dot_索敌__")
  $ts.八卦无刃杀 := 0
  $cd.八卦无刃杀 := 2500
  $skill.八卦无刃杀 := Func("__$skill_dot_八卦无刃杀__")
  $watcher.八卦无刃杀 := Func("__$watcher_dot_八卦无刃杀__")
  $ts.内丹 := 0
  $cd.内丹 := 120000
  $skill.内丹 := Func("__$skill_dot_内丹__")
  $watcher.内丹 := Func("__$watcher_dot_内丹__")
  $ts.双刃旋 := 0
  $cd.双刃旋 := 2500
  $skill.双刃旋 := Func("__$skill_dot_双刃旋__")
  $watcher.双刃旋 := Func("__$watcher_dot_双刃旋__")
  $skill.天之印 := Func("__$skill_dot_天之印__")
  $ts.夺取 := 0
  $cd.夺取 := 120000
  $skill.夺取 := Func("__$skill_dot_夺取__")
  $watcher.夺取 := Func("__$watcher_dot_夺取__")
  $ts.影牙 := 0
  $cd.影牙 := 70000
  $skill.影牙 := Func("__$skill_dot_影牙__")
  $watcher.影牙 := Func("__$watcher_dot_影牙__")
  $skill.忍术 := Func("__$skill_dot_忍术__")
  $ts.扫腿 := 0
  $cd.扫腿 := 40000
  $skill.扫腿 := Func("__$skill_dot_扫腿__")
  $watcher.扫腿 := Func("__$watcher_dot_扫腿__")
  $ts.报告 := 0
  $skill.报告 := Func("__$skill_dot_报告__")
  $ts.旋风刃 := 0
  $cd.旋风刃 := 2500
  $skill.旋风刃 := Func("__$skill_dot_旋风刃__")
  $watcher.旋风刃 := Func("__$watcher_dot_旋风刃__")
  $ts.残影 := 0
  $cd.残影 := 120000
  $skill.残影 := Func("__$skill_dot_残影__")
  $watcher.残影 := Func("__$watcher_dot_残影__")
  $ts.浴血 := 0
  $cd.浴血 := 90000
  $skill.浴血 := Func("__$skill_dot_浴血__")
  $watcher.浴血 := Func("__$watcher_dot_浴血__")
  $ts.牵制 := 0
  $cd.牵制 := 90000
  $skill.牵制 := Func("__$skill_dot_牵制__")
  $watcher.牵制 := Func("__$watcher_dot_牵制__")
  $ts.绝风 := 0
  $cd.绝风 := 2500
  $skill.绝风 := Func("__$skill_dot_绝风__")
  $watcher.绝风 := Func("__$watcher_dot_绝风__")
  $ts.能力技 := 0
  $cd.能力技 := 1000
  $skill.能力技 := Func("__$skill_dot_能力技__")
  $ts.获取状态 := 0
  $skill.获取状态 := Func("__$skill_dot_获取状态__")
  $ts.血雨飞花 := 0
  $cd.血雨飞花 := 2500
  $skill.血雨飞花 := Func("__$skill_dot_血雨飞花__")
  $watcher.血雨飞花 := Func("__$watcher_dot_血雨飞花__")
  $skill.飞刀 := Func("__$skill_dot_飞刀__")
}

; default
__$default__()

; event

f5::
  resetKey()
  resetTs()
  SoundBeep
  setLevel()
return

^f5::
  resetKey()
  SoundBeep
  Reload
return

!f4::
  resetKey()
  SoundBeep
  ExitApp
return

2joy12::
  if !(checkTrigger()) {
    return
  }
  use("冲刺")
return

2joy4::
  if !(checkTrigger()) {
    return
  }
  SetTimer bindAttack, Off
  SetTimer bindAttack, % 300
  attack()
return

2joy2::
  if !(checkTrigger()) {
    return
  }
  if ($trigger == "right") {
    defendS()
    return
  }
return

2joy1::
  if !(checkTrigger()) {
    return
  }
  if ($trigger == "right") {
    breakS()
    return
  }
  if ($trigger == "both") {
    breakH()
    return
  }
return

; eof
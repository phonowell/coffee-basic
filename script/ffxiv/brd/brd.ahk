; generated by coffee-basic/0.0.2

if (A_IsAdmin != true) {
  Run *RunAs "%A_ScriptFullPath%"
  ExitApp
}

#KeyHistory 0
#MaxThreads 20
#NoEnv
#Persistent
#SingleInstance Force
#UseHook

CoordMode Mouse, Client
CoordMode Pixel, Client
CoordMode ToolTip, Client
SendMode Event
SetBatchLines 100ms
SetKeyDelay 0, 50
SetMouseDelay 0, 50

; global variable

global $cd := {}
global $ts := {}
global $isChanting := false
global $hp := 0
global $isMoving := false
global $mp := 0
global $isTargeting := false
global $step := 0
global $level := 80
global $skill := {}
global $watcher := {}
global $isReporting := true
global $ap := 0

; function

toggleView() {
  GetKeyState __value__, 2joy5
  isPressing := __value__ == "D"
  if !(isPressing) {
    SetTimer toggleView, Off
    Send {ctrl up}{up up}
    return
  }
  GetKeyState state, 2joyr
  if (state < 20) {
    Send {ctrl down}{up down}
  }
}

attack() {
  trigger := getCurrentTrigger()
  if !(trigger) {
    return
  }
  use("获取状态")
  use("报告")
  if !(use("索敌")) {
    return
  }
  if (trigger == "right") {
    attackS()
    return
  }
  if (trigger == "both") {
    attackM()
    return
  }
}

bindAttack() {
  GetKeyState __value__, 2joy4
  isPressing := __value__ == "D"
  if !(isPressing) {
    SetTimer bindAttack, Off
    return
  }
  attack()
}

calcCd(name) {
  result := $cd[name] - (A_TickCount - $ts[name])
  if !(result > 0) {
    return 0
  }
  result := Round(result / 1000)
  return result
}

checkChanting() {
  if ($isMoving) {
    $isChanting := false
    return
  }
  PixelGetColor color, 1130, 865, RGB
  $isChanting := color == 0x2B1B13
}

checkHp() {
  PixelSearch x, y, 21, 36, 168, 36, 0x58483E, 10, Fast RGB
  if !(x) {
    $hp := 100
    return
  }
  percent := (x - 21) * 100 / (168 - 21)
  percent := Round(percent)
  $hp := percent
}

checkMoving() {
  GetKeyState dis, 2joyx
  if (dis < 40 or dis > 60) {
    $isMoving := true
    return
  }
  GetKeyState dis, 2joyy
  if (dis < 40 or dis > 60) {
    $isMoving := true
    return
  }
  $isMoving := false
}

checkMp() {
  PixelSearch x, y, 181, 36, 328, 36, 0x58483E, 10, Fast RGB
  if !(x) {
    $mp := 100
    return
  }
  percent := (x - 181) * 100 / (328 - 181)
  percent := Round(percent)
  $mp := percent
}

checkTargeting() {
  PixelGetColor color, 650, 65, RGB
  if (color == 0xFF8888) {
    $isTargeting := true
    return
  }
  if (color == 0xFFC888) {
    $isTargeting := true
    return
  }
  if (color == 0xEBD788) {
    $isTargeting := true
    return
  }
  if (color == 0xFFB1FF) {
    $isTargeting := true
    return
  }
  $isTargeting := false
}

clearTip() {
  ToolTip
}

clearWatcher(name, type := "hasUsed") {
  if (type == "hasUsed") {
    if !(hasUsed(name)) {
      return
    }
  }
  else if (type == "status") {
    if !(hasStatus(name)) {
      return
    }
  }
  if !($watcher[name]) {
    MsgBox % "invalid watcher: " . name . ""
    return
  }
  __timer__ := $watcher[name]
  SetTimer %__timer__%, Off
  $ts[name] := A_TickCount - $cd.技能施放补正
  return true
}

getCurrentTrigger() {
  GetKeyState __value__, 2joy7
  isLT := __value__ == "D"
  GetKeyState __value__, 2joy8
  isRT := __value__ == "D"
  if (isLT and isRT) {
    return "both"
  }
  if (isLT) {
    return "left"
  }
  if (isRT) {
    return "right"
  }
  return
}

hasStatus(name) {
  ImageSearch x, y, 725, 840, 925, 875, % A_ScriptDir . "\" . "image\" . name . ".png"
  return x > 0 and y > 0
}

hasStatusByTarget(name) {
  ImageSearch x, y, 725, 765, 925, 800, % A_ScriptDir . "\" . "image\" . name . ".png"
  return x > 0 and y > 0
}

hasUsed(name) {
  ImageSearch x, y, 60, 915, 225, 975, % A_ScriptDir . "\" . "image\" . name . ".png"
  return x > 0 and y > 0
}

makeReportMsg(msg, list) {
  for __i__, name in list {
    result := calcCd(name)
    if !(result > 1) {
      continue
    }
    msg := "" . msg . "`n" . name . "：" . result . "s"
  }
  return msg
}

resetKey() {
  Send {alt up}
  Send {ctrl up}
  Send {shift up}
  MouseMove 410, 640, 0
}

resetStep() {
  $step := 0
}

resetTs() {
  for key, value in $ts {
    $ts[key] := 0
  }
}

setLevel() {
  InputBox $level, , % "input level", , , , , , , , % $level
  if !($level > 0) {
    $level := 80
  }
  if ($level < 10) {
    $level := $level * 10
  }
  resetTs()
}

use(name, option := false) {
  if !($skill[name]) {
    MsgBox % "invalid skill: " . name . ""
    return
  }
  return $skill[name].Call(option)
}

watch(name) {
  if !($watcher[name]) {
    MsgBox % "invalid watcher: " . name . ""
    return
  }
  return $watcher[name]()
}

__$skill_dot_中断咏唱__() {
  if !($isChanting) {
    return
  }
  Send {space}
}

__$skill_dot_冲刺__() {
  Send {shift down}{-}{shift up}
}

__$skill_dot_空白信息__() {
  Send {shift down}{=}{shift up}
}

__$skill_dot_索敌__() {
  checkTargeting()
  if ($isTargeting) {
    return true
  }
  Send {f11}
  checkTargeting()
  return $isTargeting
}

__$skill_dot_伤腿__() {
  if !(A_TickCount - $ts.伤腿 > $cd.伤腿) {
    return
  }
  Send {shift down}{1}{shift up}
  SetTimer __$watcher_dot_伤腿__, % $cd.技能施放判断间隔
  return true
}

__$watcher_dot_伤腿__() {
  clearWatcher("伤腿")
}

__$skill_dot_伤足__() {
  if !(A_TickCount - $ts.伤足 > $cd.伤足) {
    return
  }
  Send {shift down}{3}{shift up}
  SetTimer __$watcher_dot_伤足__, % $cd.技能施放判断间隔
  return true
}

__$watcher_dot_伤足__() {
  clearWatcher("伤足")
}

__$skill_dot_失血箭__() {
  if !($level >= 12) {
    return
  }
  if !(A_TickCount - $ts.贤者的叙事谣 < 30000) {
    if !(A_TickCount - $ts.失血箭 > $cd.失血箭) {
      return
    }
  }
  Send {alt down}{5}{alt up}
  SetTimer __$watcher_dot_失血箭__, % $cd.技能施放判断间隔
  return true
}

__$watcher_dot_失血箭__() {
  clearWatcher("失血箭")
}

__$skill_dot_强力射击__() {
  Send {alt down}{1}{alt up}
  return true
}

__$skill_dot_报告__() {
  if !($isReporting) {
    return
  }
  msg := "等级：" . $level . ""
  msg := "" . msg . "`n耗时：" . A_TickCount - $ts.报告 . "ms`n"
  $ts.报告 := A_TickCount
  msg := makeReportMsg(msg, ["猛者强击", "失血箭", "纷乱箭", "贤者的叙事谣", "伤腿", "伤足"])
  ToolTip % msg, 410, 640
  SetTimer clearTip, Off
  SetTimer clearTip, % 0 - 10000
}

__$skill_dot_毒咬箭__() {
  if (hasStatusByTarget("毒咬箭")) {
    return
  }
  Send {alt down}{4}{alt up}
  return true
}

__$skill_dot_猛者强击__() {
  if !(A_TickCount - $ts.猛者强击 > $cd.猛者强击) {
    return
  }
  Send {alt down}{3}{alt up}
  SetTimer __$watcher_dot_猛者强击__, % $cd.技能施放判断间隔
  return true
}

__$watcher_dot_猛者强击__() {
  clearWatcher("猛者强击", "status")
}

__$skill_dot_直线射击__() {
  if !(hasStatus("直线射击预备")) {
    return
  }
  Send {alt down}{2}{alt up}
  return true
}

__$skill_dot_纷乱箭__() {
  if !($level >= 38) {
    return
  }
  if !(A_TickCount - $ts.纷乱箭 > $cd.纷乱箭) {
    return
  }
  if (hasStatus("直线射击预备")) {
    return
  }
  if !(hasStatus("猛者强击")) {
    return
  }
  Send {alt down}{8}{alt up}
  SetTimer __$watcher_dot_纷乱箭__, % $cd.技能施放判断间隔
  return true
}

__$watcher_dot_纷乱箭__() {
  clearWatcher("纷乱箭", "status")
}

__$skill_dot_能力技__() {
  if !($ap == 0) {
    return
  }
  if !(A_TickCount - $ts.能力技 > $cd.能力技) {
    return
  }
  $ts.能力技 := A_TickCount
  $ap := -2
  SetTimer 施放能力技, % 500
}

施放能力技() {
  if ($ap < 0) {
    $ap := -$ap
    return
  }
  if ($ap == 0) {
    SetTimer 施放能力技, Off
    return
  }
  $ap--
  能力技施放()
}

能力技施放() {
  if (use("猛者强击")) {
    return
  }
  if (use("失血箭")) {
    return
  }
  if (use("纷乱箭")) {
    return
  }
  if (use("贤者的叙事谣")) {
    return
  }
  if (use("伤腿")) {
    return
  }
  if (use("伤足")) {
    return
  }
  use("空白信息")
}

__$skill_dot_获取状态__() {
  if (A_TickCount - $ts.获取状态 > 10000) {
    use("空白信息")
    use("空白信息")
    use("空白信息")
  }
  $ts.获取状态 := A_TickCount
}

__$skill_dot_贤者的叙事谣__() {
  if !($level >= 30) {
    return
  }
  if !(A_TickCount - $ts.贤者的叙事谣 > $cd.贤者的叙事谣) {
    return
  }
  if !(hasStatus("猛者强击")) {
    return
  }
  Send {alt down}{9}{alt up}
  SetTimer __$watcher_dot_贤者的叙事谣__, % $cd.技能施放判断间隔
  return true
}

__$watcher_dot_贤者的叙事谣__() {
  clearWatcher("贤者的叙事谣")
}

__$skill_dot_连珠箭__() {
  if !($level >= 18) {
    return
  }
  Send {alt down}{6}{alt up}
  return true
}

__$skill_dot_风蚀箭__() {
  if !($level >= 30) {
    return
  }
  if (hasStatusByTarget("风蚀箭")) {
    return
  }
  Send {alt down}{7}{alt up}
  return true
}

attackS() {
  if (use("直线射击")) {
    use("能力技")
    return
  }
  if (use("风蚀箭")) {
    use("能力技")
    return
  }
  if (use("毒咬箭")) {
    use("能力技")
    return
  }
  if (use("强力射击")) {
    use("能力技")
    return
  }
}

attackM() {
  if (use("连珠箭")) {
    use("能力技")
    return
  }
  return
}

__$default__() {
  $cd.技能施放判断间隔 := 100
  $cd.技能施放补正 := 1500
  $skill.中断咏唱 := Func("__$skill_dot_中断咏唱__")
  $skill.冲刺 := Func("__$skill_dot_冲刺__")
  $skill.空白信息 := Func("__$skill_dot_空白信息__")
  $skill.索敌 := Func("__$skill_dot_索敌__")
  $ts.伤腿 := 0
  $cd.伤腿 := 30000
  $skill.伤腿 := Func("__$skill_dot_伤腿__")
  $watcher.伤腿 := Func("__$watcher_dot_伤腿__")
  $ts.伤足 := 0
  $cd.伤足 := 30000
  $skill.伤足 := Func("__$skill_dot_伤足__")
  $watcher.伤足 := Func("__$watcher_dot_伤足__")
  $ts.失血箭 := 0
  $cd.失血箭 := 15000
  $skill.失血箭 := Func("__$skill_dot_失血箭__")
  $watcher.失血箭 := Func("__$watcher_dot_失血箭__")
  $skill.强力射击 := Func("__$skill_dot_强力射击__")
  $ts.报告 := 0
  $skill.报告 := Func("__$skill_dot_报告__")
  $skill.毒咬箭 := Func("__$skill_dot_毒咬箭__")
  $ts.猛者强击 := 0
  $cd.猛者强击 := 80000
  $skill.猛者强击 := Func("__$skill_dot_猛者强击__")
  $watcher.猛者强击 := Func("__$watcher_dot_猛者强击__")
  $skill.直线射击 := Func("__$skill_dot_直线射击__")
  $ts.纷乱箭 := 0
  $cd.纷乱箭 := 80000
  $skill.纷乱箭 := Func("__$skill_dot_纷乱箭__")
  $watcher.纷乱箭 := Func("__$watcher_dot_纷乱箭__")
  $ts.能力技 := 0
  $cd.能力技 := 1000
  $skill.能力技 := Func("__$skill_dot_能力技__")
  $ts.获取状态 := 0
  $skill.获取状态 := Func("__$skill_dot_获取状态__")
  $ts.贤者的叙事谣 := 0
  $cd.贤者的叙事谣 := 80000
  $skill.贤者的叙事谣 := Func("__$skill_dot_贤者的叙事谣__")
  $watcher.贤者的叙事谣 := Func("__$watcher_dot_贤者的叙事谣__")
  $skill.连珠箭 := Func("__$skill_dot_连珠箭__")
  $skill.风蚀箭 := Func("__$skill_dot_风蚀箭__")
}

; default
__$default__()

; event

f5::
  resetKey()
  resetTs()
  SoundBeep
  setLevel()
return

^f5::
  resetKey()
  SoundBeep
  Reload
return

!f4::
  resetKey()
  SoundBeep
  ExitApp
return

2joy5::
  if !(getCurrentTrigger() == "both") {
    SetTimer toggleView, Off
    SetTimer toggleView, % 300
    return
  }
  Send {shift down}{tab}{shift up}
return

2joy6::
  if !(getCurrentTrigger() == "both") {
    return
  }
  Send {tab}
return

2joy12::
  if !(getCurrentTrigger()) {
    return
  }
  use("冲刺")
return

2joy4::
  if !(getCurrentTrigger()) {
    return
  }
  SetTimer bindAttack, Off
  SetTimer bindAttack, % 300
  attack()
return

; eof